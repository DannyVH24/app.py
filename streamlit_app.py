import streamlit as st
import numpy as np

# Estilos personalizados
st.markdown("""
    <style>
        .title {
            text-align: center;
            font-size: 36px;
            font-weight: bold;
            color: #4A90E2;
        }
        .container {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }
        .card {
            width: 400px;
            height: 400px;
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
            padding: 20px;
            cursor: pointer;
            transition: 0.3s;
        }
        .card:hover {
            background-color: #e0e0e0;
        }
                .project-description {
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
            padding: 15px;
            background-color: #eef1f7;
            border-radius: 10px;
            color: black;
        }    
       
    </style>
""", unsafe_allow_html=True)

# T칤tulo principal
st.markdown('<div class="title">Calculadora Estad칤stica 游늵</div>', unsafe_allow_html=True)

# Descripci칩n del Proyecto
st.markdown('<div class="project-description">Esta aplicaci칩n permite calcular el tama침o de muestra en diferentes escenarios estad칤sticos. Selecciona una opci칩n para comenzar.</div>', unsafe_allow_html=True)

# Contenedor de opciones
st.markdown('<div class="container">', unsafe_allow_html=True)

col1, col2 = st.columns(2)

with col1:
    if st.button("游닂 Estad칤stica 1", key="estadistica1"):
        st.session_state["menu"] = "Estad칤stica 1"

with col2:
    if st.button("游닁 Estad칤stica 2", key="estadistica2"):
        st.session_state["menu"] = "Estad칤stica 2"

st.markdown('</div>', unsafe_allow_html=True)

# Cuadro para texto del proyecto

# Manejo de selecci칩n de men칰
if "menu" not in st.session_state:
    st.session_state["menu"] = "Inicio"

if st.session_state["menu"] == "Estad칤stica 1":
    st.subheader("游닂 Estad칤stica 1")
    st.write("Aqu칤 ir치n los temas de Estad칤stica 1.")

elif st.session_state["menu"] == "Estad칤stica 2":
    st.subheader("游닁 Estad칤stica 2")

    # Selecci칩n de la f칩rmula a usar en Estad칤stica 2
    opcion = st.selectbox("Selecciona el c치lculo a realizar:", [
        "Tama침o de muestra (poblaci칩n desconocida)",
        "Tama침o de muestra (poblaci칩n conocida)",
        "Tama침o de muestra para estimaci칩n de medias (poblaci칩n desconocida)",
        "Tama침o de muestra para estimaci칩n de medias (poblaci칩n conocida)",
        "Ajuste por p칠rdidas esperadas"
    ])

    # Entrada de datos
    if opcion == "Tama침o de muestra (poblaci칩n desconocida)":
        st.subheader("Tama침o de muestra cuando se desconoce el tama침o de la poblaci칩n")
        Z = st.number_input("Nivel de confianza (Z)", value=1.960, format="%.3f")
        p = st.number_input("Proporci칩n esperada (p)", value=0.500, format="%.3f")
        q = 1 - p
        d = st.number_input("Margen de error (d)", value=0.050, format="%.3f")

        if st.button("Calcular"):
            n = (Z**2 * p * q) / (d**2)
            st.write(f"**Tama침o de muestra necesario:** {round(n)}")

    elif opcion == "Tama침o de muestra (poblaci칩n conocida)":
        st.subheader("Tama침o de muestra cuando se conoce el tama침o de la poblaci칩n")
        N = st.number_input("Tama침o de la poblaci칩n (N)", value=1000)
        Z = st.number_input("Nivel de confianza (Z)", value=1.960, format="%.3f")
        p = st.number_input("Proporci칩n esperada (p)", value=0.500, format="%.3f")
        q = 1 - p
        d = st.number_input("Margen de error (d)", value=0.050, format="%.3f")

        if st.button("Calcular"):
            num = N * (Z**2 * p * q)
            den = (d**2 * (N - 1)) + (Z**2 * p * q)
            n = num / den
            st.write(f"**Tama침o de muestra necesario:** {round(n)}")

    elif opcion == "Tama침o de muestra para estimaci칩n de medias (poblaci칩n desconocida)":
        st.subheader("Tama침o de muestra para estimaci칩n de medias (Poblaci칩n desconocida)")
        Z = st.number_input("Nivel de confianza (Z)", value=1.960, format="%.3f")
        s = st.number_input("Desviaci칩n est치ndar (s)", value=1.000, format="%.3f")
        d = st.number_input("Margen de error (d)", value=0.050, format="%.3f")

        if st.button("Calcular"):
            n = (Z**2 * s**2) / (d**2)
            st.write(f"**Tama침o de muestra necesario:** {round(n)}")

    elif opcion == "Tama침o de muestra para estimaci칩n de medias (poblaci칩n conocida)":
        st.subheader("Tama침o de muestra para estimaci칩n de medias (Poblaci칩n conocida)")
        N = st.number_input("Tama침o de la poblaci칩n (N)", value=1000)
        Z = st.number_input("Nivel de confianza (Z)", value=1.960, format="%.3f")
        s = st.number_input("Desviaci칩n est치ndar (s)", value=1.000, format="%.3f")
        d = st.number_input("Margen de error (d)", value=0.050, format="%.3f")

        if st.button("Calcular"):
            num = N * (Z**2 * s**2)
            den = (d**2 * (N - 1)) + (Z**2 * s**2)
            n = num / den
            st.write(f"**Tama침o de muestra necesario:** {round(n)}")

    elif opcion == "Ajuste por p칠rdidas esperadas":
        st.subheader("Ajuste por p칠rdidas esperadas")
        n = st.number_input("Tama침o de muestra inicial (n)", value=100)
        pe = st.number_input("Porcentaje de p칠rdidas esperadas (p_e, en decimal)", value=0.100, format="%.3f")

        if st.button("Calcular"):
            nc = n / (1 - pe)
            st.write(f"**Tama침o de muestra ajustado:** {round(nc)}")    
